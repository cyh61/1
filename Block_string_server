#!/usr/bin/env python
#
# -*- coding:utf-8 -*-
# File: sync_socket_server.py
#
from socket import *
from time import ctime

HOST = '192.168.132.9'
PORT = 6666
BUFSIZE = 1024
ADDR = (HOST, PORT)

tcpSerSock = socket(AF_INET, SOCK_STREAM)#定义socket类型，网络通信，TCP,socket.SOCK_STREAM，流式socket , for TCP
tcpSerSock.bind(ADDR) #套接字绑定的IP与端口
tcpSerSock.listen(5)# 监听TCP，10代表：操作系统可以挂起(未处理请求时等待状态)的最大连接数量。该值至少为1
quit = False
shutdown = False

while True:
    print('waiting for connection...')
    tcpCliSock, addr = tcpSerSock.accept()  ## 开始被动接受TCP客户端的连接。并返回新的套接字与IP地址
    print('...connected from: ', addr)

    while True:
        data = tcpCliSock.recv(BUFSIZE) # 接受TCP数据，1024表示缓冲区的大小
        data = data.decode('utf8')
        if not data:
            break
        ss = '[%s] %s' %(ctime(), data)
        tcpCliSock.send(ss.encode('utf8'))
        print(ss)
        if data == 'bye':
            quit = True
            break
        elif data == 'shutdown':
          shutdown = True
          break
    print('Bye-bye: [%s: %d]' %(addr[0], addr[1]))
    tcpCliSock.close()
    if shutdown:
        break
tcpSerSock.close()
print('Server has been')
